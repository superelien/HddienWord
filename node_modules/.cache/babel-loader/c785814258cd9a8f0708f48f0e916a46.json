{"ast":null,"code":"var _jsxFileName = \"/var/www/html/Etudes/Divers Exo/OpenClassroom/jeu-du-pendu/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Keyboard from './Keyboard.js';\nconst SIDE = 6;\nconst HIDDENWORDS = [\"foofigthers\", \"nadasurf\", \"beatles\", \"batman\", \"avengers\", \"tarantino\"];\nconst ALPHABET = 'ABCDEFGHIJKLMOPQRSTUVWXYZ';\nconst VISUAL_PAUSE_MSECS = 750;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hiddenWords: [],\n      onPlayWord: [],\n      Letters: this.generateKeyboards(),\n      guesses: 0\n    };\n\n    this.handleKeyboardClick = index => {\n      const currentPair = this.state.currentPair;\n\n      if (currentPair.length === 2) {\n        return;\n      }\n\n      if (currentPair.length === 0) {\n        this.setState({\n          currentPair: [index]\n        });\n        return;\n      }\n\n      this.handleNewPairClosedBy(index);\n    };\n  }\n\n  generateKeyboards() {\n    const result = [];\n    const size = SIDE * SIDE;\n    const candidates = ALPHABET;\n\n    while (result.length < size) {\n      const keyboard = candidates;\n      result.push(keyboard, keyboard);\n    }\n\n    return result;\n  } // Arrow fx for binding\n\n\n  handleNewPairClosedBy(index) {\n    const _this$state = this.state,\n          Letters = _this$state.Letters,\n          currentPair = _this$state.currentPair,\n          guesses = _this$state.guesses,\n          matchedKeyboardIndices = _this$state.matchedKeyboardIndices;\n    const newPair = [currentPair[0], index];\n    const newGuesses = guesses + 1;\n    const matched = Letters[newPair[0]] === Letters[newPair[1]];\n    this.setState({\n      currentPair: newPair,\n      guesses: newGuesses\n    });\n\n    if (matched) {\n      this.setState({\n        matchedKeyboardIndices: [...matchedKeyboardIndices, ...newPair]\n      });\n    }\n\n    setTimeout(() => this.setState({\n      currentPair: []\n    }), VISUAL_PAUSE_MSECS);\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          Letters = _this$state2.Letters,\n          guesses = _this$state2.guesses;\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" Devine la pop Culture\"), Letters.map((keyboard, index) => React.createElement(Keyboard, {\n      keyboard: keyboard,\n      feedback: this.getFeedbackForKeyboard(index),\n      key: index,\n      index: index,\n      onClick: this.handleKeyboardClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/var/www/html/Etudes/Divers Exo/OpenClassroom/jeu-du-pendu/src/App.js"],"names":["React","Component","Keyboard","SIDE","HIDDENWORDS","ALPHABET","VISUAL_PAUSE_MSECS","App","state","hiddenWords","onPlayWord","Letters","generateKeyboards","guesses","handleKeyboardClick","index","currentPair","length","setState","handleNewPairClosedBy","result","size","candidates","keyboard","push","matchedKeyboardIndices","newPair","newGuesses","matched","setTimeout","render","map","getFeedbackForKeyboard"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './App.css'\n\nimport Keyboard from './Keyboard.js'\n\nconst SIDE = 6\nconst HIDDENWORDS = [\"foofigthers\", \"nadasurf\", \"beatles\", \"batman\", \"avengers\", \"tarantino\"]\nconst ALPHABET = 'ABCDEFGHIJKLMOPQRSTUVWXYZ'\nconst VISUAL_PAUSE_MSECS = 750\n\n\nclass App extends Component {\n  state = {\n    hiddenWords: [],\n    onPlayWord: [],\n    Letters: this.generateKeyboards(),\n    guesses: 0,\n  }\n\n  generateKeyboards() {\n    const result = []\n    const size = SIDE * SIDE\n    const candidates = ALPHABET\n    while (result.length < size) {\n      const keyboard = candidates\n      result.push(keyboard, keyboard)\n    }\n    return (result)\n  }\n\n\n  // Arrow fx for binding\nhandleKeyboardClick = index => {\n  const { currentPair } = this.state\n\n  if (currentPair.length === 2) {\n    return\n  }\n\n  if (currentPair.length === 0) {\n    this.setState({ currentPair: [index] })\n    return\n  }\n\n  this.handleNewPairClosedBy(index)\n}\nhandleNewPairClosedBy(index) {\n  const { Letters, currentPair, guesses, matchedKeyboardIndices } = this.state\n\n  const newPair = [currentPair[0], index]\n  const newGuesses = guesses + 1\n  const matched = Letters[newPair[0]] === Letters[newPair[1]]\n  this.setState({ currentPair: newPair, guesses: newGuesses })\n  if (matched) {\n    this.setState({ matchedKeyboardIndices: [...matchedKeyboardIndices, ...newPair] })\n  }\n  setTimeout(() => this.setState({ currentPair: [] }), VISUAL_PAUSE_MSECS)\n}\n\n  render() {\n    const { Letters, guesses } = this.state\n    return (\n     <div className=\"game\">\n      <h1> Devine la pop Culture</h1>\n      {Letters.map((keyboard, index) =>(\n          <Keyboard\n            keyboard={keyboard}\n            feedback={this.getFeedbackForKeyboard(index)}\n            key={index}\n            index={index}\n            onClick={this.handleKeyboardClick }\n          />\n        ))}\n     </div>\n   )\n  }\n}\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}