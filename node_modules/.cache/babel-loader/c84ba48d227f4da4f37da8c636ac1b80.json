{"ast":null,"code":"var _jsxFileName = \"/var/www/html/Etudes/Divers Exo/OpenClassroom/jeu-du-pendu/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Keyboard from './Keyboard.js';\nconst SIDE = 6;\nconst HIDDENWORDS = [\"foofigthers\", \"nadasurf\", \"beatles\", \"batman\", \"avengers\", \"tarantino\"];\nconst ALPHABET = 'ABCDEFGHIJKLMOPQRSTUVWXYZ';\nconst VISUAL_PAUSE_MSECS = 750;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hiddenWords: [],\n      onPlayWord: [],\n      Letters: this.generateKeyboards(),\n      guesses: 0,\n      matchedCardIndices: []\n    };\n  }\n\n  generateKeyboards() {\n    const result = [];\n    const size = SIDE * SIDE;\n    const candidates = ALPHABET;\n\n    while (result.length < size) {\n      const keyboard = candidates;\n      result.push(keyboard, keyboard);\n    }\n\n    return result;\n  }\n\n  render() {\n    const _this$state = this.state,\n          Letters = _this$state.Letters,\n          guesses = _this$state.guesses;\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \" Devine la pop Culture\"), Letters.map((keyboard, index) => React.createElement(Keyboard, {\n      keyboard: keyboard,\n      feedback: this.getFeedbackForKeyboard(index),\n      key: index,\n      index: index,\n      onClick: this.handleKeyboardClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/var/www/html/Etudes/Divers Exo/OpenClassroom/jeu-du-pendu/src/App.js"],"names":["React","Component","Keyboard","SIDE","HIDDENWORDS","ALPHABET","VISUAL_PAUSE_MSECS","App","state","hiddenWords","onPlayWord","Letters","generateKeyboards","guesses","matchedCardIndices","result","size","candidates","length","keyboard","push","render","map","index","getFeedbackForKeyboard","handleKeyboardClick"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,eAArB;AAEA,MAAMC,IAAI,GAAG,CAAb;AACA,MAAMC,WAAW,GAAG,CAAC,aAAD,EAAgB,UAAhB,EAA4B,SAA5B,EAAuC,QAAvC,EAAiD,UAAjD,EAA6D,WAA7D,CAApB;AACA,MAAMC,QAAQ,GAAG,2BAAjB;AACA,MAAMC,kBAAkB,GAAG,GAA3B;;AAGA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BO,KAD0B,GAClB;AACNC,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,UAAU,EAAE,EAFN;AAGNC,MAAAA,OAAO,EAAE,KAAKC,iBAAL,EAHH;AAINC,MAAAA,OAAO,EAAE,CAJH;AAKNC,MAAAA,kBAAkB,EAAE;AALd,KADkB;AAAA;;AAS1BF,EAAAA,iBAAiB,GAAG;AAClB,UAAMG,MAAM,GAAG,EAAf;AACA,UAAMC,IAAI,GAAGb,IAAI,GAAGA,IAApB;AACA,UAAMc,UAAU,GAAGZ,QAAnB;;AACA,WAAOU,MAAM,CAACG,MAAP,GAAgBF,IAAvB,EAA6B;AAC3B,YAAMG,QAAQ,GAAGF,UAAjB;AACAF,MAAAA,MAAM,CAACK,IAAP,CAAYD,QAAZ,EAAsBA,QAAtB;AACD;;AACD,WAAQJ,MAAR;AACD;;AAIDM,EAAAA,MAAM,GAAG;AAAA,wBACsB,KAAKb,KAD3B;AAAA,UACCG,OADD,eACCA,OADD;AAAA,UACUE,OADV,eACUA,OADV;AAEP,WACC;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADD,EAEEF,OAAO,CAACW,GAAR,CAAY,CAACH,QAAD,EAAWI,KAAX,KACT,oBAAC,QAAD;AACE,MAAA,QAAQ,EAAEJ,QADZ;AAEE,MAAA,QAAQ,EAAE,KAAKK,sBAAL,CAA4BD,KAA5B,CAFZ;AAGE,MAAA,GAAG,EAAEA,KAHP;AAIE,MAAA,KAAK,EAAEA,KAJT;AAKE,MAAA,OAAO,EAAE,KAAKE,mBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CAFF,CADD;AAcD;;AAtCyB;;AAyC5B,eAAelB,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport './App.css'\n\nimport Keyboard from './Keyboard.js'\n\nconst SIDE = 6\nconst HIDDENWORDS = [\"foofigthers\", \"nadasurf\", \"beatles\", \"batman\", \"avengers\", \"tarantino\"]\nconst ALPHABET = 'ABCDEFGHIJKLMOPQRSTUVWXYZ'\nconst VISUAL_PAUSE_MSECS = 750\n\n\nclass App extends Component {\n  state = {\n    hiddenWords: [],\n    onPlayWord: [],\n    Letters: this.generateKeyboards(),\n    guesses: 0,\n    matchedCardIndices: [],\n  }\n\n  generateKeyboards() {\n    const result = []\n    const size = SIDE * SIDE\n    const candidates = ALPHABET\n    while (result.length < size) {\n      const keyboard = candidates\n      result.push(keyboard, keyboard)\n    }\n    return (result)\n  }\n\n \n\n  render() {\n    const { Letters, guesses } = this.state\n    return (\n     <div className=\"game\">\n      <h1> Devine la pop Culture</h1>\n      {Letters.map((keyboard, index) =>(\n          <Keyboard\n            keyboard={keyboard}\n            feedback={this.getFeedbackForKeyboard(index)}\n            key={index}\n            index={index}\n            onClick={this.handleKeyboardClick }\n          />\n        ))}\n     </div>\n   )\n  }\n}\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}